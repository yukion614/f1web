// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 建立表單

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  avatar    String?
  password  String
  role      Int      @default(0) // 0: user, 1: admin
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts    Post[]
  messages Message[]
  Comment  Comment[]

  @@map("users") // 將資料表名稱改為 users
}

model Post {
  id      Int    @id @default(autoincrement())
  title   String
  content String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  status Int @default(1)

  authorId Int
  author   User @relation(fields: [authorId], references: [id])

  comments Comment[] // 一篇 Post 有多個 Comment

  @@map("posts")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  status Int @default(1)

  postId Int
  post   Post @relation(fields: [postId], references: [id])

  authorId Int
  author   User @relation(fields: [authorId], references: [id])

  @@map("comments")
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  status    Int      @default(1) @db.TinyInt
  createdAt DateTime @default(now())

  authorId Int
  author   User @relation(fields: [authorId], references: [id])

  @@map("messages") // 將資料表名稱改為 messages
}
